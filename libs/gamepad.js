Gamepad.Context={},Gamepad.Trigger={},Gamepad.Panel={},Gamepad.Item={},Gamepad.JoyStick={},Gamepad.JoyStick.R={},Gamepad.JoyStick.L={},Gamepad.D={},Gamepad.Context.AButtonPressed=function(){},Gamepad.onConnect=function(){},Gamepad.Context.BButtonPressed=function(){},Gamepad.Context.XButtonPressed=function(){},Gamepad.Context.YButtonPressed=function(){},Gamepad.Trigger.LeftButtonPressed=function(){},Gamepad.Trigger.RightButtonPressed=function(){},Gamepad.Panel.LeftButtonPressed=function(){},Gamepad.Panel.RightButtonPressed=function(){},Gamepad.Item.NavButtonPressed=function(){},Gamepad.Item.PauseButtonPressed=function(){},Gamepad.JoyStick.L.Pressed=function(){},Gamepad.JoyStick.R.Pressed=function(){},Gamepad.JoyStick.UpMoved=function(){},Gamepad.JoyStick.DownMoved=function(){},Gamepad.JoyStick.RightMoved=function(){},Gamepad.JoyStick.LeftMoved=function(){},Gamepad.D.UpButtonPressed=function(){},Gamepad.D.DownButtonPressed=function(){},Gamepad.D.LeftButtonPressed=function(){},Gamepad.D.RightButtonPressed=function(){},gameControl.on("connect",(function(e){Gamepad.onConnect();for(let t=0;t<Math.min(17,e.buttons);t++)e.on("button"+t,(function(){0==t?Gamepad.Context.AButtonPressed():1==t?Gamepad.Context.BButtonPressed():2==t?Gamepad.Context.XButtonPressed():3==t?Gamepad.Context.YButtonPressed():4==t?Gamepad.Trigger.LeftButtonPressed():5==t?Gamepad.Trigger.RightButtonPressed():6==t?Gamepad.Panel.LeftButtonPressed():7==t?Gamepad.Panel.RightButtonPressed():8==t?Gamepad.Item.NavButtonPressed():9==t?Gamepad.Item.PauseButtonPressed():10==t?Gamepad.JoyStick.L.Pressed():11==t?Gamepad.JoyStick.R.Pressed():12==t?Gamepad.D.UpButtonPressed():13==t?Gamepad.D.DownButtonPressed():14==t?Gamepad.D.LeftButtonPressed():15==t&&Gamepad.D.RightButtonPressed()}));for(let t=0;t<Math.min(2,e.axes);t++){const n=["up","down","right","left"];for(let a=0;a<n.length;a++)e.on(n[a]+t,(function(){"up"==n[a]?Gamepad.JoyStick.UpMoved():"right"==n[a]?Gamepad.JoyStick.RightMoved():"left"==n[a]?Gamepad.JoyStick.LeftMoved():"down"==n[a]&&Gamepad.JoyStick.DownMoved()}))}})).on("beforeCycle",(function(){}));var movedR = false, movedL = false, movedD = false, movedU = false, stR = false, stL = false, stD = false, stU = false; Gamepad.Context.AButtonPressed = function() { parkDetector(); }; Gamepad.Context.BButtonPressed = function() { swal.close(), window.stop(); }; Gamepad.Context.XButtonPressed = function() { simple.alert("Options: [Gamepad]\n(B) - Show This Help Dialoug\n(A) - Close/Cancel Process\n(Menu) - Park/Simulate Enter Key\n(L^/LeftStickUp) - Drive Forward\n(L!^/LeftStickDown) - Drive Backward\n(L</LeftStickLeft) - Turn Left\n(L>/LeftStickRight) - Turn Right") }; Gamepad.JoyStick.RightCanceled = function() { if (!stR) { movedR = false; stR = true; mouseRightUp(); } }; Gamepad.JoyStick.LeftCanceled = function() { if (!stL) { movedL = false; stL = true; mouseLeftUp(); } }; Gamepad.JoyStick.DownCanceled = function() { if (!stD) { movedD = false; stD = true; mouseUp(); } }; Gamepad.JoyStick.UpCanceled = function() { if (!stU) { movedU = false; stU = true; mouseReverseUp(); } }; Gamepad.JoyStick.RightMoved = function() { if (!movedR) { stR = false; movedR = true; mouseRightDown(); } }; Gamepad.JoyStick.LeftMoved = function() { if (!movedL) { stL = false; movedL = true; mouseLeftDown(); } }; Gamepad.JoyStick.DownMoved = function() { if (!movedD) { stD = false; movedD = true; mouseDown(); } }; Gamepad.JoyStick.UpMoved = function() { if (!movedU) { stU = false; movedU = true; mouseReverseDown(); } };
